Sun Feb  4 07:55:45 CST 2024
results of aws-golden-image.sh

? ./aws-golden-image.sh 
### get latest ami for platform debian-10 ###
"ami-0234c545e7f8e80d4"
### get latest ami for platform debian-11 ###
"ami-0f20d40f8640bb346"
### get latest ami for platform debian-12 ###
"ami-09f356378c9576a6a"
### get latest ami for platform debian-9 ###
null
### get latest ami for platform redhat-6 ###
null
### get latest ami for platform redhat-7 ###
"ami-00342897eb8ba6355"
### get latest ami for platform redhat-8 ###
"ami-083a0ff0ee6ffe5cb"
### get latest ami for platform redhat-9 ###
"ami-0e8fb3f6bd012277f"
### get latest ami for platform suse-12 ###
"ami-0d78dc4fdb90d28a2"
### get latest ami for platform suse-15 ###
"ami-0e6e78596f3522ace"
### get latest ami for platform ubuntu-16 ###
null
### get latest ami for platform ubuntu-18 ###
"ami-0bb220fc4bffd88dd"
### get latest ami for platform ubuntu-20 ###
"ami-07e4e8101a24d7fb5"
### get latest ami for platform ubuntu-22 ###
"ami-08a4226735d7b809b"

so pretty good, we would need debian-9, redhat-6, ubuntu-16 as those are never "latest" what are we using RN?
redhat-6
ami-00a5cc8dc6fb7552d
owner: 304194462000
name centos-6-x64
# probably OUR image!?
debian-9
ami-07a0560634acb945f
owner 379101102735
name debian-stretch-hvm-x86_64-gp2-2019-09-08-17994
ubuntu-16
ami-0d03add87774b12c5
owner 099720109477
name ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20190913

owner-alias - The owner alias (amazon | aws-marketplace ). The valid aliases are defined in an Amazon-maintained list. This is not the Amazon Web Services account alias that can be set using the IAM console. We recommend that you use the Owner request parameter instead of this filter.
owner-id - The Amazon Web Services account ID of the owner. We recommend that you use the Owner request parameter instead of this filter.


aws ec2 describe-images \
    --owners amazon \
    --filters "Name=platform,Values=windows" "Name=root-device-type,Values=ebs"

nope
--owners (list)

Scopes the results to images with the specified owners. You can specify a combination of Amazon Web Services account IDs, self , amazon , and aws-marketplace . If you omit this parameter, the results include all images for which you have launch permissions, regardless of ownership.

so this is "us", yes, "me" aka ntdev account
? aws ec2 describe-images --owner 304194462000 --output json --region us-east-2 | jq .Images.[].Name
"win-acceptance-2023-10-25"
"centos-7-x64"
"centos-6-x64"
three images, saved because others are too old
? aws ec2 describe-images --owner 379101102735 --output json --region us-east-2 | jq .Images.[].Name
"debian-stretch-hvm-x86_64-gp2-2022-03-25-58319"
"debian-stretch-hvm-arm64-gp2-2022-03-09-63885"
"debian-stretch-hvm-arm64-gp2-2022-03-25-58341"
"debian-stretch-hvm-x86_64-gp2-2022-03-09-63938"
"debian-stretch-hvm-x86_64-gp2-2022-07-01-66430"

not sure who that is
found in community AMIs
debian-stretch-hvm-x86_64-gp2-2022-03-25-58319
ami-05df299f946cd43a2
FAI Debian Image

OwnerAlias: â€“
Platform: Debian
Architecture: x86_64
Owner: 379101102735
Publish date: 2022-03-25
Root device type: ebs
Virtualization: hvm
ENA enabled: Yes
Select

https://wiki.debian.org/Cloud/AmazonEC2Image/Stretch

Both are owned by AWS account ID 379101102735.



so legit!@

AMI names

debian-stretch-hvm-arm64-gp2-2021-12-30-21785
debian-stretch-hvm-x86_64-gp2-2022-07-01-66430
Both are owned by AWS account ID 379101102735.

tons of images in ubuntu :(

? aws ec2 describe-images --owner 099720109477 --output json --region us-east-2 | jq .Images.[].Name | wc -l
1656

https://canonical-aws.readthedocs-hosted.com/en/latest/aws-how-to/instances/find-ubuntu-images/

099720109477 (in the default partition)


yep, checks

different name scheme
? aws ec2 describe-images --owner 099720109477 --output json --region us-east-2 | jq .Images.[].Name | grep 16.04
"ubuntu-pro-server/images/hvm-ssd/ubuntu-xenial-16.04-amd64-pro-server-20230912"
"ubuntu-pro-server/images/hvm-ssd/ubuntu-xenial-16.04-amd64-pro-server-20231018"
"ubuntu-pro-server/images/hvm-ssd/ubuntu-xenial-16.04-amd64-pro-server-20231020"
"ubuntu-pro-server/images/hvm-ssd/ubuntu-xenial-16.04-amd64-pro-server-20240125"
"ubuntu-pro-server/images/hvm-ssd/ubuntu-xenial-16.04-amd64-pro-server-20240110"
"ubuntu-pro-server/images/hvm-ssd/ubuntu-xenial-16.04-amd64-pro-server-20221202"
"ubuntu-pro-server/images/hvm-ssd/ubuntu-xenial-16.04-amd64-pro-server-20231010"
"ubuntu-pro-server/images/hvm-ssd/ubuntu-xenial-16.04-amd64-pro-server-20231207"
Mon Feb  5 10:49:03 CST 2024

need to use 

aws ec2 create-image \
    --instance-id i-1234567890abcdef0 \
    --name "My server" \
    --description "An AMI for my server"

instead of create-snapshot

also need to delete the previous golden image? or delete <= n-2 images, leave the previous but how to tag/re-tag for use?

? aws ec2 create-image --instance-id i-0e86dfb3d7893a4aa --name "suse-12-build-host" --description "2024-02-05 suse-12 official ami, updated, testing pass, cleaned up"
{
    "ImageId": "ami-07eb5eaf94c7e5739"
}

